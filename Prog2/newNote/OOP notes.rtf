{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fswiss\fcharset0 Arial-BoldMT;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c100000\c100000\c100000\c0;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww17360\viewh11940\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
# testRepo\
\
test file for git \
Commit using terminal\
\
# Notes for OOP\

\fs36 1 - Inheritance -> to establish relationship with classes of same object\

\fs26     ex: creating a SUPERCLASS/PARENT CLASS that has all the necessary components\
        create SUBCLASSES/CHILD CLASS which inherits/reuses the components of the ParentClass with its own specific components\
\
        \
types of relations parent/child\
    composition -> strong relation to parent, stops working without it\
    \
    aggregation -> if parent is removed child can still work\
\
\
        \

\fs36 2 - Polymorphism 
\fs26 -> Multiple behaviors/definitions of an object \
Object >properties-variables, Behavior -> methods\
\
\
\
Overloading ->
\f1 Method overloading in java is\'a0a feature that allows a class to have more than one method with the same name, but with different parameters\
\
Overriding -> occurs when a subclass (child class) has the same method as the parent class\
\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl537\qj\partightenfactor0
\ls1\ilvl0
\f2\b0\fs34 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb4 The static binding uses\'a0Type information for binding while Dynamic binding uses\'a0Objects to resolve to bind.\
\pard\pardeftab720\sl360\partightenfactor0

\f1\b\fs26 \AppleTypeServices \cf2 \cb3 \
\pard\pardeftab720\sa480\partightenfactor0

\f3\fs48 \AppleTypeServices\AppleTypeServicesF65539 \cf2 Static Binding \

\fs26 \AppleTypeServices\AppleTypeServicesF65539 The binding which can be resolved at compile time by the compiler is known as static or early binding. The binding of all the static, private, and final methods is done at\'a0compile-time.\

\fs37\fsmilli18720 \AppleTypeServices\AppleTypeServicesF65539 \cb4 Dynamic Binding\
\pard\pardeftab720\sa200\qj\partightenfactor0

\f2\b0\fs34 \AppleTypeServices\AppleTypeServicesF65539 \cf2 In Dynamic binding compiler doesn\'92t decide the method to be called. Overriding is a perfect example of dynamic binding. In overriding both parent and child classes have the same method.\
\pard\pardeftab720\sa480\partightenfactor0

\f3\b\fs26 \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 \
\pard\pardeftab720\sa480\qc\partightenfactor0
\cf2 \
\pard\pardeftab720\sl360\partightenfactor0

\f0 \AppleTypeServices \cf2 \
\

\fs36 3 - Encapsulation
\fs26  -> used to protect data\
            ->access modifiers\
        public\
        private -> can\'92t be overridden but can have other methods in other classes with same name\
        protected -> only accessible \
        default\
\
		final -> can\'92t be overridden / can\'92t be inherited	or extended \
		static -> can\'92t be overridden\
\
\
\

\fs36 4 - Abstraction\
\
\
\
FILE IO
\fs26 \
\
-> Stream -> OBject\
\
Input and output stream\
\
\
\
File class\
- \
\
\
\
\
\
}